Design Document:

The structure and some functional requirements of the project are as follows.

1. Getting data as modules:
a) Getting names of developers and write them into a csv file as a function.
b) Class method: According to the csv file mentioned above, get the number of Signed-off-by:, Reported-by: tags, Review by:, Tested-by: tags, total number of commits, number of commits  with bugs and number of commits with Fix of these developers and write the data into another csv file.

2. Preprocessing and cleanning data as a method
a) Calculating fix rate (fix / commit) and bug rate (bug / commit).
b) Deleting the meaningless data with wrong developer's name.
c) Deleting developers with less than 50 commits. 

3. Designing data for model as a method
a) Deviding data into two categorises based on bug rate.(class A and class B)
b) Use 3/4 data to build classification decision tree, 1/4 data for test.

4. Using SMOTE to avoid sample imblance as a method.

5. Using decision tree to train the model as a method

6. Improving the model as methods
a) Using grid search to select the best value of parameters.
b) Pruning the decision tree to avoid overfitting. Carried out grid search and cross validation to optimize the parameters.
c) Using the best estimator to train a new model.

5. Reporting model's metrics as methods 
a) Calculating the accuracy of the model.
b) Reoprting the classification report of model.
c) Reporting the feature importance in the model.
d) Construct ROC curve and evaluate the performance of the model by calculating the area of AUC.

6. Plotting the ROC as a method 
a) Showing the plot.

7. Saving result as a method
a) Visualzing the decision tree and save the .pdf file

8. Result interpretation:
a). Interpret the decision tree generated.
b). Reject or accept the hypothesis.



